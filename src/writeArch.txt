void writeArchiveFile(ifstream &sourceFile, string code, string archiveName, int sourceFileLength, string *table){
    istringbitstream fileLengthStr (integerToString(sourceFileLength) + '{');
    istringbitstream codeBin(code);
    ofbitstream outFile(archiveName);

    /*Writing length of source file to archive file*/
    int bitLength;
    while (bitLength != -1) {
        bitLength = fileLengthStr.readBit();
        if (bitLength == 1) outFile.writeBit(1);
        else if (bitLength == 0)outFile.writeBit(0);
    }

    /*Writing alphabet of source file with characts frequency to archive file*/
    int bit;
    while (bit != -1){
        bit = codeBin.readBit();
        if (bit == 1) outFile.writeBit(1);
        else if (bit == 0)outFile.writeBit(0);
    }

    /* Reading whole source file to char array*/
    sourceFile.seekg(0, sourceFile.end);
    int length = sourceFile.tellg();
    sourceFile.seekg(0, sourceFile.beg);

    char *buffer = new char[length];
    sourceFile.read(buffer, length);

    cout << "Length while writting: " << length << endl;

    /* Go through char array, code all characters according to coding table in combination of bits
    *  and directly write it to archive file in the binary mode.
    */
    for (int j = 0; j < length; j++) {
        char ch = buffer[j];
        string str = table[ch];
        
        //cout << ch << " - " << str << endl;
        for(int i = 0; i < str.length(); i++){
            if (str[i] == '1') outFile.writeBit(1);
            else outFile.writeBit(0);
        }
        
    }
    delete[] buffer;
    outFile.close();
}